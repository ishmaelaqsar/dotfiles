# Custom bindings
set -g prefix C-x
set -g mouse on
bind-key C-x send-prefix
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
set -g base-index 1
set-window-option -g pane-base-index 1
bind-key -r M-Up resize-pane -U 5
bind-key -r M-Down resize-pane -D 5
bind-key -r M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -n M-[ copy-mode
bind-key -n M-] paste-buffer
bind-key -T copy-mode C-Left send-keys -X previous-word
bind-key -T copy-mode C-Right send-keys -X next-word-end
bind-key -n M-T new-window -n tmux-conf -c ~/.tmux.d/

# Toggle synchronize-panes
bind-key Y set-window-option synchronize-panes \; if-shell "tmux show-options -w | grep -q 'synchronize-panes on'"\
      "display-message 'synchronize-panes on'" "display-message 'synchronize-panes off'"

# Toggle monitor-activity
bind-key a set-window-option monitor-activity \; if-shell "tmux show-options -w | grep -q 'monitor-activity on'"\
      "display-message 'monitor-activity on'" "display-message 'monitor-activity off'"

bind-key W command-prompt "rename-window '%%'"
bind-key b choose-buffer

# Emacs bindings
set -g status-keys emacs
set-window-option -g mode-keys emacs
bind-key -n M-x command-prompt
bind-key -n M-: command-prompt
bind-key M-x send-keys "M-x"
bind-key M-: send-keys "M-:"

# Git diff window
bind-key g if-shell "cd #{pane_current_path} && git diff" \
      "new-window -n git-diff -c '#{pane_current_path}' '( git diff --color=always --ignore-space-change --ignore-all-space && echo && git -c status.color=always status ) | less -r'"\
      "display-message 'Not a git repository.'"

# Kill pane if more than one exists
bind-key 0 if-shell "[[ $(tmux display-message -p '#{window_panes}') -gt 1 ]]"\
      "kill-pane"\
      "display-message 'Cannot delete the sole pane'"

# Kill all panes except current
bind-key 1 run-shell "tmux list-panes -F '#D' | grep -v $(tmux display-message -p '#D') | xargs -I{} tmux kill-pane -t {}"

bind-key 2 split-window -v -c "#{pane_current_path}" \; select-pane -l
bind-key 3 split-window -h -c "#{pane_current_path}" \; select-pane -l
bind-key k confirm-before -p "Kill pane '#W:#P'? (y/n)" kill-pane

bind-key C-b choose-tree -w

# Window switching
bind-key -n C-b switch-client -T SWITCHWINDOW
bind-key -T SWITCHWINDOW 0 select-window -t :=0
bind-key -T SWITCHWINDOW 1 select-window -t :=1
bind-key -T SWITCHWINDOW 2 select-window -t :=2
bind-key -T SWITCHWINDOW 3 select-window -t :=3
bind-key -T SWITCHWINDOW 4 select-window -t :=4
bind-key -T SWITCHWINDOW 5 select-window -t :=5
bind-key -T SWITCHWINDOW 6 select-window -t :=6
bind-key -T SWITCHWINDOW 7 select-window -t :=7
bind-key -T SWITCHWINDOW 8 select-window -t :=8
bind-key -T SWITCHWINDOW 9 select-window -t :=9

# Help mode
bind-key -n C-h switch-client -T HELP \; display-message "C-h (Type ? for further options)-"
bind-key -T HELP k list-keys
bind-key -T HELP c new-window -n 'Commands' "man -P 'less -p ^COMMANDS' tmux"
bind-key -T HELP v new-window -n 'Variables' "man -P 'less -p \"Variable name\"' tmux"
bind-key -T HELP F new-window -n 'Formats' "man -P 'less -p ^FORMATS' tmux"
bind-key -T HELP h new-window -n 'Hooks' "man -P 'less -p ^HOOKS' tmux"
bind-key -T HELP H show-hooks -g
bind-key -T HELP e new-window -n 'Environment' "man -P 'less -p ^ENVIRONMENT' tmux"
bind-key -T HELP E showenv
bind-key -T HELP g showenv -g
bind-key -T HELP o show-options
bind-key -T HELP O show-options -g
bind-key -T HELP w show-window-options
bind-key -T HELP W show-window-options -g
bind-key -T HELP m new-window -n 'tmux man page' "man tmux"
bind-key -T HELP ? switch-client -T HELP \; new-window -n 'Help Page' "~/.tmux.d/help_doc_gen.py ~/.tmux.conf | less"
bind-key -T HELP q if-shell "echo #W | grep 'Help Page'" "send-keys q"

# Style adjustments
set -g status-left-length 20
set -g xterm-keys on
set -g default-terminal "xterm-256color"
set -g status-style fg=black,bg=default
set-window-option -g window-status-style fg=cyan
set-window-option -g window-status-current-style fg=magenta
set -g message-fg default
set -g message-bg default
set -g message-attr bright
set-window-option -g mode-style bg=blue,fg=white

# Display time
set -g display-time 2000
